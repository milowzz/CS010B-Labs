#include <iostream>
#include "Distance.h"
using namespace std;

/* Constructs a default Distance of 0 (0 feet and 0.0 inches)
*/
Distance::Distance(){
_feet = 0;
_inches = 0;
}


/* Constructs a distance of ft feet and in inches,
unless in >= 12, in which case the values of feet and inches
are adjusted accordingly. A Distance will always be positive.
*/
Distance::Distance(unsigned ft, double in){
_feet = ft;
_inches = in;
init();
}


/* Constructs a distance of 0 ft and in inches,
unless in >= 12, in which case the values of feet and inches
are adjusted accordingly. A Distance will always be positive.
*/
Distance::Distance(double in){
_feet = 0;
_inches = in;
init();
}


/* Returns just the feet portion of the Distance
*/
unsigned Distance::getFeet() const{
return _feet;
}


/* Returns just the inches portion of the Distance
*/
double Distance::getInches() const{
return _inches;
}


/* Returns the entire distance as the equivalent amount of inches.
(e.g., 4 feet 3.5 inches would be returned as 51.5 inches)
*/
double Distance::distanceInInches() const{
return (_feet*12 + _inches);
}


/* Returns the entire distance as the equivalent amount of feet.
(e.g., 3 feet 6 inches would be returned as 3.5 feet)
*/
double Distance::distanceInFeet() const{
return (_feet + _inches/12.0);
}


/* Returns the sum of 2 Distances.
*/
const Distance Distance::operator+(const Distance &rhs) const{
Distance SumInches(distanceInInches()+rhs.distanceInInches());
return SumInches;
}


/* Returns the difference between 2 Distances.
*/
const Distance Distance::operator-(const Distance &rhs) const{
double DifInches = distanceInInches() - rhs.distanceInInches();
if(DifInches < 0)
DifInches = DifInches * -1;

Distance Dif(DifInches);
return Dif;
}


/* Outputs to the stream out the Distance in the format:
feet' inches'' (i.e. 3' 3.41'')
*/
ostream & operator<<(ostream &out, const Distance &rhs){
o<<rhs.getFeet()<<"\' "<<rhs.getInches()<<"\"";
return o;
}

/* Used by the 2 parameterized constructors to convert any negative values to positive and
inches >= 12 to the appropriate number of feet and inches.
*/
void Distance::init(){

if(_inches < 0)
_inches = _inches * -1;

while(_inches >= 12){
_feet = _feet++;
_inches = _inches -12;
}
}
