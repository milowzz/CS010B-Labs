//Distance.cpp file
//Implement the functions 
//constructors will also be included in here too

#include <iostream>
using namespace std;
#include "Distance.h"
#include <cmath>


Distance::Distance(){
    feet =0;
    inches =0;
}


Distance::Distance(unsigned FT, double IN) {
   feet = FT;
   inches = IN;
   if(inches < 0){
   inches = inches * -1;
   }

   while(inches >= 12){
   feet++;
   inches = inches -12;
   }

}

Distance::Distance(double IN) {
   feet = 0;
   inches = IN;

   if(inches < 0){
   inches = inches * -1;
   }

   while(inches >= 12){
   feet++;
   inches = inches -12;
   }

}

double Distance::distanceInches() const{
return (feet*12 + inches);
}



double Distance::distanceFeet() const{
return (feet + inches/12.0);
}


Distance Distance::operator+(Distance rhs) {
   Distance totalDistance;

   totalDistance.feet = feet + rhs.feet;
   totalDistance.inches = inches + rhs.inches;

   if(totalDistance.inches > 12){
    totalDistance.inches = totalDistance.inches -12;
    totalDistance.feet++;
   }


   return totalDistance;
}

Distance Distance::operator-(Distance rhs) {
   Distance totalDistance;

   double temp = distanceInches() - rhs.distanceInches();
   totalDistance.feet = (temp/12);
   if(totalDistance.feet < 0){
    totalDistance.feet = abs(totalDistance.feet);
   }

   totalDistance.inches = fmod(temp, 12);
   if(totalDistance.inches < 0){
    totalDistance.inches = abs(totalDistance.inches);

   }


   return totalDistance;
}

ostream & operator<<(ostream &o, Distance rhs) {
   o << rhs.feet << "'"  << " " << rhs.inches << "\"" << endl;
   return o;
}






